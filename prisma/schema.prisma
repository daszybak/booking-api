datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Reservation {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  userId      Int
  user        User     @relation("UserReservations", fields: [userId], references: [id])
  providerId  Int
  provider    User     @relation("UserProvider", fields: [providerId], references: [id])
  statusId    Int
  status      Status[] @relation("ReservationStatus")
}

model User {
  id              Int           @id @default(autoincrement())
  sub             String        @unique
  role            UserRole
  reserved        Reservation[] @relation("UserReservations")
  provided        Reservation[] @relation("UserProvider")
  givenRatings    Rating[]      @relation("RatingUser")
  receivedRatings Rating[]      @relation("RatingProvider")
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  deletedAt       DateTime?
  email           String?
  name            String?
}

model Rating {
  id          Int       @id @default(autoincrement())
  providerId  Int
  provider    User      @relation("RatingProvider", fields: [providerId], references: [id])
  recipientId Int
  recipient   User      @relation("RatingUser", fields: [recipientId], references: [id])
  score       Int
  comment     String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
}

model Status {
  id            Int               @id @default(autoincrement())
  name          ReservationStatus
  reservationId Int
  reservation   Reservation       @relation("ReservationStatus", fields: [reservationId], references: [id])
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
  deletedAt     DateTime?
  timeline      Int
}

enum UserRole {
  RECIPIENT
  PROVIDER
  ADMIN
}

enum ReservationStatus {
  CREATED
  JOINED
  CANCELED
  COMPLETED
}
